#BlueJ class context
comment0.target=NonogramGUI
comment0.text=\r\n\ A\ GUI-based\ user\ interface\ to\ a\ Nonogram\ puzzle.\r\n\ <p>\r\n\ NonogramGUI\ acts\ as\ driver\ to\ other\ gui\ modules\r\n\r\n\ @author\ Dr\ Mark\ C.\ Sinclair\r\n\ @version\ September\ 2022\r\n
comment1.params=
comment1.target=NonogramGUI()
comment1.text=\r\n\ Default\ constructor\r\n
comment10.params=
comment10.target=void\ refreshBoard()
comment10.text=\r\n\ Refresh\ board.\r\n
comment11.params=assign
comment11.target=void\ displayCell(nonogram.Assign)
comment11.text=\r\n\ Display\ cell.\r\n\r\n\ @param\ assign\ the\ assign\r\n
comment12.params=assign
comment12.target=void\ pushToStack(nonogram.Assign)
comment12.text=\r\n\ Push\ assign\ to\ stack.\r\n\r\n\ @param\ assign\ the\ assign\r\n
comment13.params=str
comment13.target=void\ log(java.lang.String)
comment13.text=\r\n\ Log.\r\n\r\n\ @param\ str\ the\ str\r\n
comment14.params=str
comment14.target=void\ error(java.lang.String)
comment14.text=\r\n\ Error.\r\n\r\n\ @param\ str\ the\ str\r\n
comment15.params=title\ str
comment15.target=void\ pop(java.lang.String,\ java.lang.String)
comment15.text=\r\n\ Pop.\r\n\r\n\ @param\ title\ the\ title\r\n\ @param\ str\ \ \ the\ str\r\n
comment16.params=
comment16.target=nonogram.Nonogram\ getPuzzle()
comment16.text=\r\n\ Gets\ Nonogram\ puzzle.\r\n\r\n\ @return\ the\ puzzle\r\n
comment17.params=puzzle
comment17.target=void\ setPuzzle(nonogram.Nonogram)
comment17.text=\r\n\ Sets\ Nonogram\ puzzle.\r\n\r\n\ @param\ puzzle\ the\ puzzle\r\n
comment2.params=state
comment2.target=char\ stateAsChar(int)
comment2.text=\r\n\ Convert\ an\ individual\ cell\ state\ into\ a\ display\ character\r\n\r\n\ @param\ state\ the\ cell\ state\r\n\ @return\ the\ character\ ready\ for\ display\r\n
comment3.params=c
comment3.target=int\ stateFromChar(char)
comment3.text=\r\n\ Convert\ a\ display\ character\ into\ a\ Nonogram\ cell\ state\r\n\r\n\ @param\ c\ the\ display\ character\r\n\ @return\ the\ cell\ state\r\n
comment4.params=c
comment4.target=boolean\ isValidStateChar(char)
comment4.text=\r\n\ Check\ if\ a\ character\ represents\ a\ valid\ cell\ state\r\n\r\n\ @param\ c\ the\ character\r\n\ @return\ true\ if\ this\ character\ represents\ a\ valid\ cell\ state,\ otherwise\ false\r\n
comment5.params=args
comment5.target=void\ main(java.lang.String[])
comment5.text=\r\n\ The\ entry\ point\ of\ application.\r\n\r\n\ @param\ args\ the\ input\ arguments\r\n
comment6.params=filename
comment6.target=void\ loadNon(java.lang.String)
comment6.text=\r\n\ load\ non\ file\ and\ refresh\ the\ board\r\n\r\n\ @param\ filename\ .non\ file\ name\r\n
comment7.params=
comment7.target=void\ prepareBoard()
comment7.text=\r\n\ Prepare\ board.\r\n
comment8.params=
comment8.target=void\ clear()
comment8.text=\r\n\ Clear\ Board.\r\n
comment9.params=
comment9.target=void\ revalidateBoard()
comment9.text=\r\n\ Revalidate\ board.\r\n
numComments=18
